{
    "queries": [
        {
            "question": "Write the SQL in Oracle SQL dialect. Return the customer name and address as one field called fullAddress that consists of the address, city, state. Only show customers in 'IA' or 'BC' that have a valid address. Order by customer name ascending.",
            "sql": "SELECT CONCAT(CONCAT(CONCAT(CONCAT(customer.cname, ', '), customer.address), ', ', customer.city), ', ', customer.state) AS fullAddress FROM customer WHERE state IN ('IA', 'BC') AND address IS NOT NULL ORDER BY cname ASC;",
            "time": 18.168687105178833,
            "token-usage": {
                "table_recall": {
                    "total_tokens": 433,
                    "total_cost": 0.018000000000000002,
                    "prompt_tokens": 266,
                    "completion_tokens": 167
                },
                "column_recall": {
                    "total_tokens": 525,
                    "total_cost": 0.021179999999999997,
                    "prompt_tokens": 344,
                    "completion_tokens": 181
                },
                "sql_generation": {
                    "total_tokens": 630,
                    "total_cost": 0.020519999999999997,
                    "prompt_tokens": 576,
                    "completion_tokens": 54
                }
            }
        },
        {
            "question": "Write the SQL in Oracle SQL dialect. Return the shipment id, shipment date, product id, and amount for all shipments in 2022 where there was a product shipped with an amount greater than 8. Only show a shipment once and order by shipment date descending and amount descending.",
            "sql": "SELECT DISTINCT shipment.sid, shipment.shipdate, shippedproduct.pid, shippedproduct.amount FROM shipment JOIN shippedproduct ON shipment.sid = shippedproduct.sid WHERE shipment.shipdate BETWEEN TO_DATE('2022-01-01','YYYY-MM-DD') AND TO_DATE('2022-12-31','YYYY-MM-DD') AND shippedproduct.amount > 8 ORDER BY shipment.shipdate DESC, shippedproduct.amount DESC;",
            "time": 26.8367657661438,
            "token-usage": {
                "table_recall": {
                    "total_tokens": 435,
                    "total_cost": 0.018000000000000002,
                    "prompt_tokens": 270,
                    "completion_tokens": 165
                },
                "column_recall": {
                    "total_tokens": 836,
                    "total_cost": 0.03972,
                    "prompt_tokens": 348,
                    "completion_tokens": 488
                },
                "sql_generation": {
                    "total_tokens": 685,
                    "total_cost": 0.023129999999999998,
                    "prompt_tokens": 599,
                    "completion_tokens": 86
                }
            }
        },
        {
            "question": "Write the SQL in Oracle SQL dialect. Find all customers that have an 'R' or 'T' in their name and have a state of 'MI' or 'IA'. Order by customer name descending.",
            "sql": "SELECT cname FROM customer WHERE (state = 'MI' OR state = 'IA') AND (cname LIKE '%R%' OR cname LIKE '%T%') ORDER BY cname DESC;",
            "time": 20.870800256729126,
            "token-usage": {
                "table_recall": {
                    "total_tokens": 361,
                    "total_cost": 0.014009999999999998,
                    "prompt_tokens": 255,
                    "completion_tokens": 106
                },
                "column_recall": {
                    "total_tokens": 703,
                    "total_cost": 0.032189999999999996,
                    "prompt_tokens": 333,
                    "completion_tokens": 370
                },
                "sql_generation": {
                    "total_tokens": 624,
                    "total_cost": 0.019919999999999997,
                    "prompt_tokens": 584,
                    "completion_tokens": 40
                }
            }
        },
        {
            "question": "Write the SQL in Oracle SQL dialect. Return a list of the unique product id and names that have shipped before with an amount less than 5 and order by product id descending.",
            "sql": "SELECT DISTINCT product.pid, product.pname FROM product INNER JOIN shippedproduct ON product.pid = shippedproduct.pid INNER JOIN shipment ON shipment.sid = shippedproduct.sid WHERE shippedproduct.amount < 5 ORDER BY product.pid DESC;",
            "time": 28.876953840255737,
            "token-usage": {
                "table_recall": {
                    "total_tokens": 493,
                    "total_cost": 0.022109999999999998,
                    "prompt_tokens": 249,
                    "completion_tokens": 244
                },
                "column_recall": {
                    "total_tokens": 681,
                    "total_cost": 0.031049999999999998,
                    "prompt_tokens": 327,
                    "completion_tokens": 354
                },
                "sql_generation": {
                    "total_tokens": 633,
                    "total_cost": 0.02064,
                    "prompt_tokens": 578,
                    "completion_tokens": 55
                }
            }
        },
        {
            "question": "Write the SQL in Oracle SQL dialect. For each state, return the number of customers in that state and the number of shipments for customers in that state. Only show states with at least 2 shipments. Order by number of shipments descending.",
            "sql": "SELECT state, COUNT(DISTINCT customer.cid) AS num_customers, COUNT(DISTINCT shipment.sid) AS num_shipments FROM customer JOIN shipment ON customer.cid = shipment.cid GROUP BY state HAVING COUNT(DISTINCT shipment.sid) >= 2 ORDER BY num_shipments DESC;",
            "time": 24.586056232452393,
            "token-usage": {
                "table_recall": {
                    "total_tokens": 441,
                    "total_cost": 0.01863,
                    "prompt_tokens": 261,
                    "completion_tokens": 180
                },
                "column_recall": {
                    "total_tokens": 591,
                    "total_cost": 0.02529,
                    "prompt_tokens": 339,
                    "completion_tokens": 252
                },
                "sql_generation": {
                    "total_tokens": 638,
                    "total_cost": 0.020999999999999998,
                    "prompt_tokens": 576,
                    "completion_tokens": 62
                }
            }
        },
        {
            "question": "Write the SQL in Oracle SQL dialect. Return the top 3 products for state 'AB' based on shipment revenue (amount*price) for the year 2022.",
            "sql": "SELECT pname FROM product WHERE pid IN ( SELECT pid FROM shippedproduct WHERE sid IN ( SELECT sid FROM shipment WHERE cid IN ( SELECT cid FROM customer WHERE state = 'AB' ) AND EXTRACT(YEAR FROM shipdate) = 2022 ) ) GROUP BY pid ORDER BY SUM(amount*price) DESC FETCH FIRST 3 ROWS ONLY;",
            "time": 29.082056999206543,
            "token-usage": {
                "table_recall": {
                    "total_tokens": 474,
                    "total_cost": 0.020999999999999998,
                    "prompt_tokens": 248,
                    "completion_tokens": 226
                },
                "column_recall": {
                    "total_tokens": 684,
                    "total_cost": 0.031259999999999996,
                    "prompt_tokens": 326,
                    "completion_tokens": 358
                },
                "sql_generation": {
                    "total_tokens": 664,
                    "total_cost": 0.02271,
                    "prompt_tokens": 571,
                    "completion_tokens": 93
                }
            }
        },
        {
            "question": "Write the SQL in Oracle SQL dialect. Return a list of products (id and name) along with the number of times it has been shipped, the total amount of all shipments, and the total value of all shipments. Only consider shipments after September 1st, 2021, and only show products if they have been shipped at least three times and have a totalValueShipped > $110. Order by totalAmountShipped ascending.",
            "sql": "SELECT product.pid, product.pname, COUNT(*) AS timesShipped, SUM(shippedproduct.amount) AS totalAmountShipped, SUM(shippedproduct.amount * product.price) AS totalValueShipped FROM product JOIN shippedproduct ON product.pid = shippedproduct.pid JOIN shipment ON shippedproduct.sid = shipment.sid WHERE shipment.shipdate > TO_DATE('2021-09-01','YYYY-MM-DD') GROUP BY product.pid, product.pname HAVING COUNT(*) >= 3 AND SUM(shippedproduct.amount * product.price) > 110 ORDER BY totalAmountShipped ASC;",
            "time": 31.555647134780884,
            "token-usage": {
                "table_recall": {
                    "total_tokens": 533,
                    "total_cost": 0.02292,
                    "prompt_tokens": 302,
                    "completion_tokens": 231
                },
                "column_recall": {
                    "total_tokens": 698,
                    "total_cost": 0.03048,
                    "prompt_tokens": 380,
                    "completion_tokens": 318
                },
                "sql_generation": {
                    "total_tokens": 753,
                    "total_cost": 0.02625,
                    "prompt_tokens": 631,
                    "completion_tokens": 122
                }
            }
        },
        {
            "question": "Write the SQL in Oracle SQL dialect. Return pairs of customers (only show a pair once) that have been shipped the same product. Return the number of times the pair of customers have been shipped the same product (numShippedProducts). Order by numShippedProducts descending, then first customer name ascending, and second customer name ascending. Show customer pairs that have 5 or more times that they have been shipped the same product.",
            "sql": "SELECT A.cid, A.cname, B.cid, B.cname, COUNT(*) AS numShippedProducts FROM shipment SA, shippedproduct SPA, customer A, shipment SB, shippedproduct SPB, customer B WHERE SA.cid = A.cid AND SPA.sid = SA.sid AND SB.cid = B.cid AND SPB.sid = SB.sid AND SPA.pid = SPB.pid AND A.cid < B.cid GROUP BY A.cid, A.cname, B.cid, B.cname HAVING COUNT(*) >= 5 ORDER BY numShippedProducts DESC, A.cname ASC, B.cname ASC;",
            "time": 23.542564153671265,
            "token-usage": {
                "table_recall": {
                    "total_tokens": 448,
                    "total_cost": 0.01788,
                    "prompt_tokens": 300,
                    "completion_tokens": 148
                },
                "column_recall": {
                    "total_tokens": 703,
                    "total_cost": 0.03084,
                    "prompt_tokens": 378,
                    "completion_tokens": 325
                },
                "sql_generation": {
                    "total_tokens": 762,
                    "total_cost": 0.02685,
                    "prompt_tokens": 629,
                    "completion_tokens": 133
                }
            }
        },
        {
            "question": "Write the SQL in Oracle SQL dialect. Return a complete list of all customers (cid, cname), the total number of shipments, and total shipped value (amount*price) that they have been shipped. Return the bottom five customers by total shipped value.",
            "sql": "SELECT SELECT cu.cid, cu.cname, COUNT(sh.sid), SUM(sp.amount * pr.price) AS total_shipped_value FROM customer cu JOIN shipment sh ON cu.cid = sh.cid JOIN shippedproduct sp ON sh.sid = sp.sid JOIN product pr ON sp.pid = pr.pid GROUP BY cu.cid, cu.cname ORDER BY total_shipped_value FETCH FIRST 5 ROWS ONLY;",
            "time": 20.883282899856567,
            "token-usage": {
                "table_recall": {
                    "total_tokens": 447,
                    "total_cost": 0.0189,
                    "prompt_tokens": 264,
                    "completion_tokens": 183
                },
                "column_recall": {
                    "total_tokens": 617,
                    "total_cost": 0.02676,
                    "prompt_tokens": 342,
                    "completion_tokens": 275
                },
                "sql_generation": {
                    "total_tokens": 679,
                    "total_cost": 0.02316,
                    "prompt_tokens": 586,
                    "completion_tokens": 93
                }
            }
        },
        {
            "question": "Write the SQL in Oracle SQL dialect. Return the products that are shipped more often than the average number of times a product is shipped. Order by number of shipments descending and product id ascending.",
            "sql": "SELECT pname FROM ( SELECT pname, COUNT(*) AS shipment_count FROM product p JOIN shippedproduct sp ON p.pid = sp.pid GROUP BY pname HAVING COUNT(*) > ( SELECT AVG(amount) FROM shippedproduct ) ) ORDER BY shipment_count DESC, pname ASC;",
            "time": 25.39830708503723,
            "token-usage": {
                "table_recall": {
                    "total_tokens": 467,
                    "total_cost": 0.020489999999999998,
                    "prompt_tokens": 251,
                    "completion_tokens": 216
                },
                "column_recall": {
                    "total_tokens": 644,
                    "total_cost": 0.02877,
                    "prompt_tokens": 329,
                    "completion_tokens": 315
                },
                "sql_generation": {
                    "total_tokens": 652,
                    "total_cost": 0.021719999999999996,
                    "prompt_tokens": 580,
                    "completion_tokens": 72
                }
            }
        }
    ]
}